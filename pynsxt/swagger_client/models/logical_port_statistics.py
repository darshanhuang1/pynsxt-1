# coding: utf-8

"""
    NSX API

    VMware NSX REST API  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.aggregated_data_counter_ex import AggregatedDataCounterEx  # noqa: F401,E501
from swagger_client.models.data_counter import DataCounter  # noqa: F401,E501
from swagger_client.models.mac_learning_counters import MacLearningCounters  # noqa: F401,E501
from swagger_client.models.packets_dropped_by_security import PacketsDroppedBySecurity  # noqa: F401,E501


class LogicalPortStatistics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'tx_bytes': 'DataCounter',
        'rx_packets': 'DataCounter',
        'tx_packets': 'DataCounter',
        'rx_bytes': 'DataCounter',
        'mac_learning': 'MacLearningCounters',
        'dropped_by_security_packets': 'PacketsDroppedBySecurity',
        'logical_port_id': 'str',
        'last_update_timestamp': 'int'
    }

    attribute_map = {
        'tx_bytes': 'tx_bytes',
        'rx_packets': 'rx_packets',
        'tx_packets': 'tx_packets',
        'rx_bytes': 'rx_bytes',
        'mac_learning': 'mac_learning',
        'dropped_by_security_packets': 'dropped_by_security_packets',
        'logical_port_id': 'logical_port_id',
        'last_update_timestamp': 'last_update_timestamp'
    }

    def __init__(self, tx_bytes=None, rx_packets=None, tx_packets=None, rx_bytes=None, mac_learning=None, dropped_by_security_packets=None, logical_port_id=None, last_update_timestamp=None):  # noqa: E501
        """LogicalPortStatistics - a model defined in Swagger"""  # noqa: E501

        self._tx_bytes = None
        self._rx_packets = None
        self._tx_packets = None
        self._rx_bytes = None
        self._mac_learning = None
        self._dropped_by_security_packets = None
        self._logical_port_id = None
        self._last_update_timestamp = None
        self.discriminator = None

        if tx_bytes is not None:
            self.tx_bytes = tx_bytes
        if rx_packets is not None:
            self.rx_packets = rx_packets
        if tx_packets is not None:
            self.tx_packets = tx_packets
        if rx_bytes is not None:
            self.rx_bytes = rx_bytes
        if mac_learning is not None:
            self.mac_learning = mac_learning
        if dropped_by_security_packets is not None:
            self.dropped_by_security_packets = dropped_by_security_packets
        if logical_port_id is not None:
            self.logical_port_id = logical_port_id
        if last_update_timestamp is not None:
            self.last_update_timestamp = last_update_timestamp

    @property
    def tx_bytes(self):
        """Gets the tx_bytes of this LogicalPortStatistics.  # noqa: E501


        :return: The tx_bytes of this LogicalPortStatistics.  # noqa: E501
        :rtype: DataCounter
        """
        return self._tx_bytes

    @tx_bytes.setter
    def tx_bytes(self, tx_bytes):
        """Sets the tx_bytes of this LogicalPortStatistics.


        :param tx_bytes: The tx_bytes of this LogicalPortStatistics.  # noqa: E501
        :type: DataCounter
        """

        self._tx_bytes = tx_bytes

    @property
    def rx_packets(self):
        """Gets the rx_packets of this LogicalPortStatistics.  # noqa: E501


        :return: The rx_packets of this LogicalPortStatistics.  # noqa: E501
        :rtype: DataCounter
        """
        return self._rx_packets

    @rx_packets.setter
    def rx_packets(self, rx_packets):
        """Sets the rx_packets of this LogicalPortStatistics.


        :param rx_packets: The rx_packets of this LogicalPortStatistics.  # noqa: E501
        :type: DataCounter
        """

        self._rx_packets = rx_packets

    @property
    def tx_packets(self):
        """Gets the tx_packets of this LogicalPortStatistics.  # noqa: E501


        :return: The tx_packets of this LogicalPortStatistics.  # noqa: E501
        :rtype: DataCounter
        """
        return self._tx_packets

    @tx_packets.setter
    def tx_packets(self, tx_packets):
        """Sets the tx_packets of this LogicalPortStatistics.


        :param tx_packets: The tx_packets of this LogicalPortStatistics.  # noqa: E501
        :type: DataCounter
        """

        self._tx_packets = tx_packets

    @property
    def rx_bytes(self):
        """Gets the rx_bytes of this LogicalPortStatistics.  # noqa: E501


        :return: The rx_bytes of this LogicalPortStatistics.  # noqa: E501
        :rtype: DataCounter
        """
        return self._rx_bytes

    @rx_bytes.setter
    def rx_bytes(self, rx_bytes):
        """Sets the rx_bytes of this LogicalPortStatistics.


        :param rx_bytes: The rx_bytes of this LogicalPortStatistics.  # noqa: E501
        :type: DataCounter
        """

        self._rx_bytes = rx_bytes

    @property
    def mac_learning(self):
        """Gets the mac_learning of this LogicalPortStatistics.  # noqa: E501


        :return: The mac_learning of this LogicalPortStatistics.  # noqa: E501
        :rtype: MacLearningCounters
        """
        return self._mac_learning

    @mac_learning.setter
    def mac_learning(self, mac_learning):
        """Sets the mac_learning of this LogicalPortStatistics.


        :param mac_learning: The mac_learning of this LogicalPortStatistics.  # noqa: E501
        :type: MacLearningCounters
        """

        self._mac_learning = mac_learning

    @property
    def dropped_by_security_packets(self):
        """Gets the dropped_by_security_packets of this LogicalPortStatistics.  # noqa: E501


        :return: The dropped_by_security_packets of this LogicalPortStatistics.  # noqa: E501
        :rtype: PacketsDroppedBySecurity
        """
        return self._dropped_by_security_packets

    @dropped_by_security_packets.setter
    def dropped_by_security_packets(self, dropped_by_security_packets):
        """Sets the dropped_by_security_packets of this LogicalPortStatistics.


        :param dropped_by_security_packets: The dropped_by_security_packets of this LogicalPortStatistics.  # noqa: E501
        :type: PacketsDroppedBySecurity
        """

        self._dropped_by_security_packets = dropped_by_security_packets

    @property
    def logical_port_id(self):
        """Gets the logical_port_id of this LogicalPortStatistics.  # noqa: E501

        The id of the logical port  # noqa: E501

        :return: The logical_port_id of this LogicalPortStatistics.  # noqa: E501
        :rtype: str
        """
        return self._logical_port_id

    @logical_port_id.setter
    def logical_port_id(self, logical_port_id):
        """Sets the logical_port_id of this LogicalPortStatistics.

        The id of the logical port  # noqa: E501

        :param logical_port_id: The logical_port_id of this LogicalPortStatistics.  # noqa: E501
        :type: str
        """

        self._logical_port_id = logical_port_id

    @property
    def last_update_timestamp(self):
        """Gets the last_update_timestamp of this LogicalPortStatistics.  # noqa: E501

        Timestamp when the data was last updated; unset if data source has never updated the data.  # noqa: E501

        :return: The last_update_timestamp of this LogicalPortStatistics.  # noqa: E501
        :rtype: int
        """
        return self._last_update_timestamp

    @last_update_timestamp.setter
    def last_update_timestamp(self, last_update_timestamp):
        """Sets the last_update_timestamp of this LogicalPortStatistics.

        Timestamp when the data was last updated; unset if data source has never updated the data.  # noqa: E501

        :param last_update_timestamp: The last_update_timestamp of this LogicalPortStatistics.  # noqa: E501
        :type: int
        """

        self._last_update_timestamp = last_update_timestamp

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LogicalPortStatistics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
