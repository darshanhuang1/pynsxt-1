# coding: utf-8

"""
    NSX API

    VMware NSX REST API  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.resource import Resource  # noqa: F401,E501
from swagger_client.models.resource_link import ResourceLink  # noqa: F401,E501
from swagger_client.models.self_resource_link import SelfResourceLink  # noqa: F401,E501


class InterfaceStatistics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_self': 'SelfResourceLink',
        'links': 'list[ResourceLink]',
        'schema': 'str',
        'rx_packets': 'int',
        'rx_errors': 'int',
        'rx_bytes': 'int',
        'tx_errors': 'int',
        'tx_bytes': 'int',
        'tx_packets': 'int'
    }

    attribute_map = {
        '_self': '_self',
        'links': '_links',
        'schema': '_schema',
        'rx_packets': 'rx_packets',
        'rx_errors': 'rx_errors',
        'rx_bytes': 'rx_bytes',
        'tx_errors': 'tx_errors',
        'tx_bytes': 'tx_bytes',
        'tx_packets': 'tx_packets'
    }

    def __init__(self, _self=None, links=None, schema=None, rx_packets=None, rx_errors=None, rx_bytes=None, tx_errors=None, tx_bytes=None, tx_packets=None):  # noqa: E501
        """InterfaceStatistics - a model defined in Swagger"""  # noqa: E501

        self.__self = None
        self._links = None
        self._schema = None
        self._rx_packets = None
        self._rx_errors = None
        self._rx_bytes = None
        self._tx_errors = None
        self._tx_bytes = None
        self._tx_packets = None
        self.discriminator = None

        if _self is not None:
            self._self = _self
        if links is not None:
            self.links = links
        if schema is not None:
            self.schema = schema
        if rx_packets is not None:
            self.rx_packets = rx_packets
        if rx_errors is not None:
            self.rx_errors = rx_errors
        if rx_bytes is not None:
            self.rx_bytes = rx_bytes
        if tx_errors is not None:
            self.tx_errors = tx_errors
        if tx_bytes is not None:
            self.tx_bytes = tx_bytes
        if tx_packets is not None:
            self.tx_packets = tx_packets

    @property
    def _self(self):
        """Gets the _self of this InterfaceStatistics.  # noqa: E501


        :return: The _self of this InterfaceStatistics.  # noqa: E501
        :rtype: SelfResourceLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this InterfaceStatistics.


        :param _self: The _self of this InterfaceStatistics.  # noqa: E501
        :type: SelfResourceLink
        """

        self.__self = _self

    @property
    def links(self):
        """Gets the links of this InterfaceStatistics.  # noqa: E501

        The server will populate this field when returing the resource. Ignored on PUT and POST.  # noqa: E501

        :return: The links of this InterfaceStatistics.  # noqa: E501
        :rtype: list[ResourceLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this InterfaceStatistics.

        The server will populate this field when returing the resource. Ignored on PUT and POST.  # noqa: E501

        :param links: The links of this InterfaceStatistics.  # noqa: E501
        :type: list[ResourceLink]
        """

        self._links = links

    @property
    def schema(self):
        """Gets the schema of this InterfaceStatistics.  # noqa: E501


        :return: The schema of this InterfaceStatistics.  # noqa: E501
        :rtype: str
        """
        return self._schema

    @schema.setter
    def schema(self, schema):
        """Sets the schema of this InterfaceStatistics.


        :param schema: The schema of this InterfaceStatistics.  # noqa: E501
        :type: str
        """

        self._schema = schema

    @property
    def rx_packets(self):
        """Gets the rx_packets of this InterfaceStatistics.  # noqa: E501

        Count of packets received on this port  # noqa: E501

        :return: The rx_packets of this InterfaceStatistics.  # noqa: E501
        :rtype: int
        """
        return self._rx_packets

    @rx_packets.setter
    def rx_packets(self, rx_packets):
        """Sets the rx_packets of this InterfaceStatistics.

        Count of packets received on this port  # noqa: E501

        :param rx_packets: The rx_packets of this InterfaceStatistics.  # noqa: E501
        :type: int
        """

        self._rx_packets = rx_packets

    @property
    def rx_errors(self):
        """Gets the rx_errors of this InterfaceStatistics.  # noqa: E501

        Count of receive errors occurring on this port  # noqa: E501

        :return: The rx_errors of this InterfaceStatistics.  # noqa: E501
        :rtype: int
        """
        return self._rx_errors

    @rx_errors.setter
    def rx_errors(self, rx_errors):
        """Sets the rx_errors of this InterfaceStatistics.

        Count of receive errors occurring on this port  # noqa: E501

        :param rx_errors: The rx_errors of this InterfaceStatistics.  # noqa: E501
        :type: int
        """

        self._rx_errors = rx_errors

    @property
    def rx_bytes(self):
        """Gets the rx_bytes of this InterfaceStatistics.  # noqa: E501

        Count of bytes received on this port  # noqa: E501

        :return: The rx_bytes of this InterfaceStatistics.  # noqa: E501
        :rtype: int
        """
        return self._rx_bytes

    @rx_bytes.setter
    def rx_bytes(self, rx_bytes):
        """Sets the rx_bytes of this InterfaceStatistics.

        Count of bytes received on this port  # noqa: E501

        :param rx_bytes: The rx_bytes of this InterfaceStatistics.  # noqa: E501
        :type: int
        """

        self._rx_bytes = rx_bytes

    @property
    def tx_errors(self):
        """Gets the tx_errors of this InterfaceStatistics.  # noqa: E501

        Count of transmit errors occurring on this port  # noqa: E501

        :return: The tx_errors of this InterfaceStatistics.  # noqa: E501
        :rtype: int
        """
        return self._tx_errors

    @tx_errors.setter
    def tx_errors(self, tx_errors):
        """Sets the tx_errors of this InterfaceStatistics.

        Count of transmit errors occurring on this port  # noqa: E501

        :param tx_errors: The tx_errors of this InterfaceStatistics.  # noqa: E501
        :type: int
        """

        self._tx_errors = tx_errors

    @property
    def tx_bytes(self):
        """Gets the tx_bytes of this InterfaceStatistics.  # noqa: E501

        Count of bytes transmitted on this port  # noqa: E501

        :return: The tx_bytes of this InterfaceStatistics.  # noqa: E501
        :rtype: int
        """
        return self._tx_bytes

    @tx_bytes.setter
    def tx_bytes(self, tx_bytes):
        """Sets the tx_bytes of this InterfaceStatistics.

        Count of bytes transmitted on this port  # noqa: E501

        :param tx_bytes: The tx_bytes of this InterfaceStatistics.  # noqa: E501
        :type: int
        """

        self._tx_bytes = tx_bytes

    @property
    def tx_packets(self):
        """Gets the tx_packets of this InterfaceStatistics.  # noqa: E501

        Count of packets transmitted on this port  # noqa: E501

        :return: The tx_packets of this InterfaceStatistics.  # noqa: E501
        :rtype: int
        """
        return self._tx_packets

    @tx_packets.setter
    def tx_packets(self, tx_packets):
        """Sets the tx_packets of this InterfaceStatistics.

        Count of packets transmitted on this port  # noqa: E501

        :param tx_packets: The tx_packets of this InterfaceStatistics.  # noqa: E501
        :type: int
        """

        self._tx_packets = tx_packets

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InterfaceStatistics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
